import {
  Avatar,
  Box,
  Button,
  ButtonGroup,
  Stack,
  Tooltip,
  TooltipProps,
  Typography,
  styled,
  tooltipClasses,
} from "@mui/material";
import Badge from "@mui/material/Badge";

export default function ActiveFollowers({ item }: { item: User }) {
  const buttons = [
    <Button key="one">Follow</Button>,
    <Button key="two">View</Button>,
    <Button key="three">More</Button>,
  ];

  return (
    <HtmlTooltip
      title={
        <Stack direction="row" p={1} gap={1}>
          <Avatar alt={item.firstName} src={item.avatar.secure_url} />
          <Box>
            <Typography fontSize={18} variant="h2" fontWeight="700">
              {`${item.firstName} ${item.lastName}`}
            </Typography>
            <Box>
              <Typography
                color="CaptionText"
                variant="caption"
                fontWeight="500"
                fontSize={16}
                display="block"
              >
                0 Follower | 0 Followings
              </Typography>
              <ButtonGroup
                fullWidth
                size="small"
                variant="contained"
                disableElevation
                aria-label="Small button group"
              >
                {buttons}
              </ButtonGroup>
              <Typography variant="caption" display="block" fontSize={14}>
                Menus that are generated by open as bottom sheets at a higher
                elevation than the bar.
              </Typography>
            </Box>
          </Box>
        </Stack>
      }
    >
      <StyledBadge
        overlap="circular"
        anchorOrigin={{ vertical: "bottom", horizontal: "right" }}
        variant="dot"
      >
        <Avatar alt={item.firstName} src={item.avatar.secure_url} />
      </StyledBadge>
    </HtmlTooltip>
  );
}

// Active Indicator styles
const StyledBadge = styled(Badge)(({ theme }) => ({
  "& .MuiBadge-badge": {
    backgroundColor: "#44b700",
    color: "#44b700",
    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,
    "&::after": {
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: "100%",
      borderRadius: "50%",
      animation: "ripple 1.2s infinite ease-in-out",
      border: "1px solid currentColor",
      content: '""',
    },
  },
  "@keyframes ripple": {
    "0%": {
      transform: "scale(.8)",
      opacity: 1,
    },
    "100%": {
      transform: "scale(2.4)",
      opacity: 0,
    },
  },
}));

// custom tooltip
const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (
  <Tooltip {...props} classes={{ popper: className }} />
))(({ theme }) => ({
  [`& .${tooltipClasses.tooltip}`]: {
    backgroundColor: "white",
    color: "rgba(0, 0, 0, 0.87)",
    maxWidth: 350,
    fontSize: theme.typography.pxToRem(12),
    border: "1px solid #d1c4e9",
  },
}));
